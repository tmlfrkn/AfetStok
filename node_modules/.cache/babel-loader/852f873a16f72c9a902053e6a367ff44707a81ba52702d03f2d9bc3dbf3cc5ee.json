{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nurlan\\\\Desktop\\\\AfetStok\\\\AfetStok\\\\src\\\\components\\\\Veri.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/firestore';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyD15xx-WczyE29Ggnqi3cjyg9OKIZk_0gg\",\n//   authDomain: \"afetstok-4aa80.firebaseapp.com\",\n//   projectId: \"afetstok-4aa80\",\n//   storageBucket: \"afetstok-4aa80.appspot.com\",\n//   messagingSenderId: \"325797761358\",\n//   appId: \"1:325797761358:web:7cb8673b6860848652ce1f\"\n// };\n\n// if (!firebase.apps.length) {\n//   firebase.initializeApp(firebaseConfig);\n// }\n\n// const firestore = firebase.firestore();\n// const Veri = () => {\n//     const [cities, setCities] = useState([]);\n\n//     useEffect(() => {\n//       const fetchCities = async () => {\n//         try {\n//           const citiesRef = firestore.collection('Cities');\n//           const snapshot = await citiesRef.get();\n\n//           const citiesData = await Promise.all(snapshot.docs.map(async doc => {\n//             const data = doc.data();\n//             const collections = ['Clothes', 'Food', 'Medicine'];\n//             const cityCollections = {};\n\n//             for (const collection of collections) {\n//               const collectionSnapshot = await doc.ref.collection(collection).doc('document').get();\n//               const collectionData = collectionSnapshot.data();\n//               cityCollections[collection] = collectionData;\n//             }\n\n//             return { ...data, collections: cityCollections };\n//           }));\n\n//           setCities(citiesData);\n//         } catch (error) {\n//           console.error('Error fetching cities:', error);\n//         }\n//       };\n\n//       fetchCities();\n//     }, []);\n\n//     return (\n//       <div>\n//         <h1>Cities</h1>\n//         {cities.map((city, index) => (\n//           <div key={index}>\n//             <h2>{city.name}</h2>\n//             <h3>Clothes</h3>\n//             <p>Shoes: {city.collections.Clothes.Shoes}</p>\n//             <p>Coat: {city.collections.Clothes.Coat}</p>\n//             <h3>Food</h3>\n//             <p>Bread: {city.collections.Food.bread}</p>\n//             <p>Water: {city.collections.Food.water}</p>\n//             <h3>Medicine</h3>\n//             <p>Pills: {city.collections.Medicine.pills}</p>\n//             <p>Bandages: {city.collections.Medicine.bandages}</p>\n//           </div>\n//         ))}\n//       </div>\n//     );\n//   };\n\n//   export default Veri;\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD15xx-WczyE29Ggnqi3cjyg9OKIZk_0gg\",\n  authDomain: \"afetstok-4aa80.firebaseapp.com\",\n  projectId: \"afetstok-4aa80\",\n  storageBucket: \"afetstok-4aa80.appspot.com\",\n  messagingSenderId: \"325797761358\",\n  appId: \"1:325797761358:web:7cb8673b6860848652ce1f\"\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst firestore = firebase.firestore();\nconst Veri = () => {\n  _s();\n  var _cities$find;\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const citiesRef = firestore.collection('Cities');\n        const snapshot = await citiesRef.get();\n        const citiesData = await Promise.all(snapshot.docs.map(async doc => {\n          const data = doc.data();\n          const collections = ['Clothes', 'Food', 'Medicine'];\n          const cityCollections = {};\n          for (const collection of collections) {\n            const collectionSnapshot = await doc.ref.collection(collection).doc('document').get();\n            const collectionData = collectionSnapshot.data();\n            cityCollections[collection] = collectionData;\n          }\n          return {\n            ...data,\n            collections: cityCollections\n          };\n        }));\n        setCities(citiesData);\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      }\n    };\n    fetchCities();\n  }, []);\n  const handleCitySelect = city => {\n    setSelectedCity(city);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleCitySelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.name,\n        children: city.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), Object.entries((_cities$find = cities.find(city => city.name === selectedCity)) === null || _cities$find === void 0 ? void 0 : _cities$find.collections).map(_ref => {\n        let [collectionName, collectionData] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), Object.entries(collectionData).map(_ref2 => {\n            let [fieldName, fieldValue] = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [fieldName, \": \", fieldValue]\n            }, fieldName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this);\n          })]\n        }, collectionName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Veri, \"1ET5O4FcDZj1XJeXTTvj07Inv7U=\");\n_c = Veri;\nexport default Veri;\nvar _c;\n$RefreshReg$(_c, \"Veri\");","map":{"version":3,"names":["React","useEffect","useState","firebase","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","firestore","Veri","_s","_cities$find","cities","setCities","selectedCity","setSelectedCity","fetchCities","citiesRef","collection","snapshot","get","citiesData","Promise","all","docs","map","doc","data","collections","cityCollections","collectionSnapshot","ref","collectionData","error","console","handleCitySelect","city","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","index","name","Object","entries","find","_ref","collectionName","_ref2","fieldName","fieldValue","_c","$RefreshReg$"],"sources":["C:/Users/Nurlan/Desktop/AfetStok/AfetStok/src/components/Veri.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import firebase from 'firebase/compat/app';\r\n// import 'firebase/compat/firestore';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyD15xx-WczyE29Ggnqi3cjyg9OKIZk_0gg\",\r\n//   authDomain: \"afetstok-4aa80.firebaseapp.com\",\r\n//   projectId: \"afetstok-4aa80\",\r\n//   storageBucket: \"afetstok-4aa80.appspot.com\",\r\n//   messagingSenderId: \"325797761358\",\r\n//   appId: \"1:325797761358:web:7cb8673b6860848652ce1f\"\r\n// };\r\n\r\n// if (!firebase.apps.length) {\r\n//   firebase.initializeApp(firebaseConfig);\r\n// }\r\n\r\n// const firestore = firebase.firestore();\r\n// const Veri = () => {\r\n//     const [cities, setCities] = useState([]);\r\n  \r\n//     useEffect(() => {\r\n//       const fetchCities = async () => {\r\n//         try {\r\n//           const citiesRef = firestore.collection('Cities');\r\n//           const snapshot = await citiesRef.get();\r\n  \r\n//           const citiesData = await Promise.all(snapshot.docs.map(async doc => {\r\n//             const data = doc.data();\r\n//             const collections = ['Clothes', 'Food', 'Medicine'];\r\n//             const cityCollections = {};\r\n  \r\n//             for (const collection of collections) {\r\n//               const collectionSnapshot = await doc.ref.collection(collection).doc('document').get();\r\n//               const collectionData = collectionSnapshot.data();\r\n//               cityCollections[collection] = collectionData;\r\n//             }\r\n  \r\n//             return { ...data, collections: cityCollections };\r\n//           }));\r\n  \r\n//           setCities(citiesData);\r\n//         } catch (error) {\r\n//           console.error('Error fetching cities:', error);\r\n//         }\r\n//       };\r\n  \r\n//       fetchCities();\r\n//     }, []);\r\n  \r\n//     return (\r\n//       <div>\r\n//         <h1>Cities</h1>\r\n//         {cities.map((city, index) => (\r\n//           <div key={index}>\r\n//             <h2>{city.name}</h2>\r\n//             <h3>Clothes</h3>\r\n//             <p>Shoes: {city.collections.Clothes.Shoes}</p>\r\n//             <p>Coat: {city.collections.Clothes.Coat}</p>\r\n//             <h3>Food</h3>\r\n//             <p>Bread: {city.collections.Food.bread}</p>\r\n//             <p>Water: {city.collections.Food.water}</p>\r\n//             <h3>Medicine</h3>\r\n//             <p>Pills: {city.collections.Medicine.pills}</p>\r\n//             <p>Bandages: {city.collections.Medicine.bandages}</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     );\r\n//   };\r\n  \r\n//   export default Veri;\r\n  \r\nimport React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD15xx-WczyE29Ggnqi3cjyg9OKIZk_0gg\",\r\n  authDomain: \"afetstok-4aa80.firebaseapp.com\",\r\n  projectId: \"afetstok-4aa80\",\r\n  storageBucket: \"afetstok-4aa80.appspot.com\",\r\n  messagingSenderId: \"325797761358\",\r\n  appId: \"1:325797761358:web:7cb8673b6860848652ce1f\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nconst Veri = () => {\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCities = async () => {\r\n      try {\r\n        const citiesRef = firestore.collection('Cities');\r\n        const snapshot = await citiesRef.get();\r\n\r\n        const citiesData = await Promise.all(snapshot.docs.map(async doc => {\r\n          const data = doc.data();\r\n          const collections = ['Clothes', 'Food', 'Medicine'];\r\n          const cityCollections = {};\r\n\r\n          for (const collection of collections) {\r\n            const collectionSnapshot = await doc.ref.collection(collection).doc('document').get();\r\n            const collectionData = collectionSnapshot.data();\r\n            cityCollections[collection] = collectionData;\r\n          }\r\n\r\n          return { ...data, collections: cityCollections };\r\n        }));\r\n\r\n        setCities(citiesData);\r\n      } catch (error) {\r\n        console.error('Error fetching cities:', error);\r\n      }\r\n    };\r\n\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const handleCitySelect = (city) => {\r\n    setSelectedCity(city);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cities</h1>\r\n      <select onChange={(e) => handleCitySelect(e.target.value)}>\r\n        <option value=\"\">Select a city</option>\r\n        {cities.map((city, index) => (\r\n          <option key={index} value={city.name}>\r\n            {city.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {selectedCity && (\r\n        <div>\r\n          <h2>{selectedCity}</h2>\r\n          {Object.entries(cities.find((city) => city.name === selectedCity)?.collections).map(([collectionName, collectionData]) => (\r\n            <div key={collectionName}>\r\n              <h3>{collectionName}</h3>\r\n              {Object.entries(collectionData).map(([fieldName, fieldValue]) => (\r\n                <p key={fieldName}>{fieldName}: {fieldValue}</p>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Veri;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}